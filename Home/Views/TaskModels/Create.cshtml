@model Home.Models.ViewModels.TaskCreateViewModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_LayoutLogged.cshtml";
}

<h1>Create</h1>

<h4>TaskModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for=@Model.task.name class="control-label"></label>
                <input asp-for=@Model.task.name class="form-control" />
                <span asp-validation-for=@Model.task.name class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for=@Model.task.description class="control-label"></label>
                <input asp-for=@Model.task.description class="form-control" />
                <span asp-validation-for=@Model.task.description class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for=@Model.task.deadline class="control-label"></label>
                <input asp-for=@Model.task.deadline class="form-control" />
                <span asp-validation-for=@Model.task.deadline class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for=@Model.task.budget class="control-label"></label>
                <input asp-for="@Model.task.budget class=" form-control" />
                <span asp-validation-for="@Model.task.budget class=" text-danger"></span>
            </div>

            <div>
                <label class="control-label">Chose location:</label>
                @if (Model.locations.Count() > 0)
                {
                    <select style="display:inline;" name="Locations">
                        @foreach (var item in Model.locations)
                        {
                            <option value=@item>@item.name</option>
                        }
                    </select>
                }
                else
                {
                    <label style="display:inline;">There are no locations to be shown! You Must have at least one!</label>
                }
            </div>

            <div>
                <label class="control-label">Chose Category:</label>
                @if (Model.locations.Count() > 0)
                {
                    <select style="display:inline;" name="Categories">
                        @foreach (var item in Model.categories)
                        {
                            <option value=@item>@item.type</option>
                        }
                    </select>
                }
                else
                {
                    <label style="display:inline;">There are no categories to be shown!</label>
                }
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
